Iterative Search in a Binary Search Tree

//ITERATIONS SE KARNAA THA YANI LOOPS KAA USE KARNA HAI, 
//KAUNSA LOOPS USE KARE,AS WE KNOW WE USE FOR  LOOPS WHEN HAME RANGE PATA HO,HERE WE DONT SO WHILE LOOPS
// CONDITIONS KYA HOGA ,WELL HAMARE PASS 2 EDGE CASE KOI SA BHI POINTERS WALLE SAAWAL KAARTE WAQT RAHTA HAI IE
// PTR==NULL || PTR->next ==NULL; use it accordingly


struct node*search(struct node* ptr,int data){
    while(ptr!=NULL){
        if(ptr->data==data){
            printf("%d found at ",data);
            return ptr;
        }
        else if(ptr->data>data){
            ptr=ptr->left;
        }
        else{
            ptr=ptr->right;
        }
    }
    return NULL;
        
    }

}





int main(){
     
    // Constructing the root node - Using Function (Recommended)
    struct node *root = node(4);
    struct node *p1 = node(1);
    struct node *p2 = node(6);
    struct node *p3 = node(5);
    struct node *p4 = node(2);
   

    // Linking the root node with left and right children
    root->left = p1;
    root->right = p2;
    p1->left = p3;
    p1->right = p4;
    printf("%p\n",search (root,2));
    printf("%p\n",search (root,7));
    printf("%p\n",search (root,6));
   inTraversal(root);

    
return 0;}
    
